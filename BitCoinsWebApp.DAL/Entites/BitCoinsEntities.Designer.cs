//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BitCoinsModel", "FK_UserAccount_UserRole", "UserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BitCoinsWebApp.DAL.Entites.UserRole), "UserAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BitCoinsWebApp.DAL.Entites.UserAccount), true)]
[assembly: EdmRelationshipAttribute("BitCoinsModel", "FK_UserAccount_ImageUpload", "ImageUpload", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BitCoinsWebApp.DAL.Entites.ImageUpload), "UserAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BitCoinsWebApp.DAL.Entites.UserAccount), true)]
[assembly: EdmRelationshipAttribute("BitCoinsModel", "FK_Post_UserAccount", "UserAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BitCoinsWebApp.DAL.Entites.UserAccount), "Post", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BitCoinsWebApp.DAL.Entites.Post), true)]
[assembly: EdmRelationshipAttribute("BitCoinsModel", "FK_Transfer_Currency", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BitCoinsWebApp.DAL.Entites.Currency), "Transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BitCoinsWebApp.DAL.Entites.Transfer), true)]
[assembly: EdmRelationshipAttribute("BitCoinsModel", "FK_Transfer_TransferType", "TransferType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BitCoinsWebApp.DAL.Entites.TransferType), "Transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BitCoinsWebApp.DAL.Entites.Transfer), true)]
[assembly: EdmRelationshipAttribute("BitCoinsModel", "FK_Transfer_UserAccount", "UserAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BitCoinsWebApp.DAL.Entites.UserAccount), "Transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BitCoinsWebApp.DAL.Entites.Transfer), true)]
[assembly: EdmRelationshipAttribute("BitCoinsModel", "FK_TransferHistory_Transfer", "Transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BitCoinsWebApp.DAL.Entites.Transfer), "TransferHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BitCoinsWebApp.DAL.Entites.TransferHistory), true)]
[assembly: EdmRelationshipAttribute("BitCoinsModel", "FK_TransferHistory_TransferType", "TransferType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BitCoinsWebApp.DAL.Entites.TransferType), "TransferHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BitCoinsWebApp.DAL.Entites.TransferHistory), true)]

#endregion

namespace BitCoinsWebApp.DAL.Entites
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BitCoinsEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new BitCoinsEntities object using the connection string found in the 'BitCoinsEntities' section of the application configuration file.
        /// </summary>
        public BitCoinsEntities() : base("name=BitCoinsEntities", "BitCoinsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BitCoinsEntities object.
        /// </summary>
        public BitCoinsEntities(string connectionString) : base(connectionString, "BitCoinsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BitCoinsEntities object.
        /// </summary>
        public BitCoinsEntities(EntityConnection connection) : base(connection, "BitCoinsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserAccount> UserAccounts
        {
            get
            {
                if ((_UserAccounts == null))
                {
                    _UserAccounts = base.CreateObjectSet<UserAccount>("UserAccounts");
                }
                return _UserAccounts;
            }
        }
        private ObjectSet<UserAccount> _UserAccounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Document> Documents
        {
            get
            {
                if ((_Documents == null))
                {
                    _Documents = base.CreateObjectSet<Document>("Documents");
                }
                return _Documents;
            }
        }
        private ObjectSet<Document> _Documents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImageUpload> ImageUploads
        {
            get
            {
                if ((_ImageUploads == null))
                {
                    _ImageUploads = base.CreateObjectSet<ImageUpload>("ImageUploads");
                }
                return _ImageUploads;
            }
        }
        private ObjectSet<ImageUpload> _ImageUploads;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransferHistory> TransferHistories
        {
            get
            {
                if ((_TransferHistories == null))
                {
                    _TransferHistories = base.CreateObjectSet<TransferHistory>("TransferHistories");
                }
                return _TransferHistories;
            }
        }
        private ObjectSet<TransferHistory> _TransferHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserRole> UserRoles
        {
            get
            {
                if ((_UserRoles == null))
                {
                    _UserRoles = base.CreateObjectSet<UserRole>("UserRoles");
                }
                return _UserRoles;
            }
        }
        private ObjectSet<UserRole> _UserRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Post> Posts
        {
            get
            {
                if ((_Posts == null))
                {
                    _Posts = base.CreateObjectSet<Post>("Posts");
                }
                return _Posts;
            }
        }
        private ObjectSet<Post> _Posts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Currency> Currencies
        {
            get
            {
                if ((_Currencies == null))
                {
                    _Currencies = base.CreateObjectSet<Currency>("Currencies");
                }
                return _Currencies;
            }
        }
        private ObjectSet<Currency> _Currencies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Transfer> Transfers
        {
            get
            {
                if ((_Transfers == null))
                {
                    _Transfers = base.CreateObjectSet<Transfer>("Transfers");
                }
                return _Transfers;
            }
        }
        private ObjectSet<Transfer> _Transfers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransferType> TransferTypes
        {
            get
            {
                if ((_TransferTypes == null))
                {
                    _TransferTypes = base.CreateObjectSet<TransferType>("TransferTypes");
                }
                return _TransferTypes;
            }
        }
        private ObjectSet<TransferType> _TransferTypes;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserAccounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserAccounts(UserAccount userAccount)
        {
            base.AddObject("UserAccounts", userAccount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Documents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocuments(Document document)
        {
            base.AddObject("Documents", document);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImageUploads EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImageUploads(ImageUpload imageUpload)
        {
            base.AddObject("ImageUploads", imageUpload);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransferHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransferHistories(TransferHistory transferHistory)
        {
            base.AddObject("TransferHistories", transferHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserRoles(UserRole userRole)
        {
            base.AddObject("UserRoles", userRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Posts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPosts(Post post)
        {
            base.AddObject("Posts", post);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Currencies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCurrencies(Currency currency)
        {
            base.AddObject("Currencies", currency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Transfers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransfers(Transfer transfer)
        {
            base.AddObject("Transfers", transfer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransferTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransferTypes(TransferType transferType)
        {
            base.AddObject("TransferTypes", transferType);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BitCoinsModel", Name="Currency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Currency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Currency object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="currencyName">Initial value of the CurrencyName property.</param>
        public static Currency CreateCurrency(global::System.Int32 id, global::System.String currencyName)
        {
            Currency currency = new Currency();
            currency.ID = id;
            currency.CurrencyName = currencyName;
            return currency;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurrencyName
        {
            get
            {
                return _CurrencyName;
            }
            set
            {
                OnCurrencyNameChanging(value);
                ReportPropertyChanging("CurrencyName");
                _CurrencyName = StructuralObject.SetValidValue(value, false, "CurrencyName");
                ReportPropertyChanged("CurrencyName");
                OnCurrencyNameChanged();
            }
        }
        private global::System.String _CurrencyName;
        partial void OnCurrencyNameChanging(global::System.String value);
        partial void OnCurrencyNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BitCoinsModel", "FK_Transfer_Currency", "Transfer")]
        public EntityCollection<Transfer> Transfers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transfer>("BitCoinsModel.FK_Transfer_Currency", "Transfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transfer>("BitCoinsModel.FK_Transfer_Currency", "Transfer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BitCoinsModel", Name="Document")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Document : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Document object.
        /// </summary>
        /// <param name="documentID">Initial value of the DocumentID property.</param>
        /// <param name="documentName">Initial value of the DocumentName property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="documentFile">Initial value of the DocumentFile property.</param>
        public static Document CreateDocument(global::System.Int32 documentID, global::System.String documentName, global::System.DateTime createDate, global::System.String documentFile)
        {
            Document document = new Document();
            document.DocumentID = documentID;
            document.DocumentName = documentName;
            document.CreateDate = createDate;
            document.DocumentFile = documentFile;
            return document;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentID
        {
            get
            {
                return _DocumentID;
            }
            set
            {
                if (_DocumentID != value)
                {
                    OnDocumentIDChanging(value);
                    ReportPropertyChanging("DocumentID");
                    _DocumentID = StructuralObject.SetValidValue(value, "DocumentID");
                    ReportPropertyChanged("DocumentID");
                    OnDocumentIDChanged();
                }
            }
        }
        private global::System.Int32 _DocumentID;
        partial void OnDocumentIDChanging(global::System.Int32 value);
        partial void OnDocumentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentName
        {
            get
            {
                return _DocumentName;
            }
            set
            {
                OnDocumentNameChanging(value);
                ReportPropertyChanging("DocumentName");
                _DocumentName = StructuralObject.SetValidValue(value, false, "DocumentName");
                ReportPropertyChanged("DocumentName");
                OnDocumentNameChanged();
            }
        }
        private global::System.String _DocumentName;
        partial void OnDocumentNameChanging(global::System.String value);
        partial void OnDocumentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value, "CreateDate");
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentFile
        {
            get
            {
                return _DocumentFile;
            }
            set
            {
                OnDocumentFileChanging(value);
                ReportPropertyChanging("DocumentFile");
                _DocumentFile = StructuralObject.SetValidValue(value, false, "DocumentFile");
                ReportPropertyChanged("DocumentFile");
                OnDocumentFileChanged();
            }
        }
        private global::System.String _DocumentFile;
        partial void OnDocumentFileChanging(global::System.String value);
        partial void OnDocumentFileChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BitCoinsModel", Name="ImageUpload")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImageUpload : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImageUpload object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="imageName">Initial value of the ImageName property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="imageFile">Initial value of the ImageFile property.</param>
        public static ImageUpload CreateImageUpload(global::System.Int32 id, global::System.String imageName, global::System.DateTime createDate, global::System.String imageFile)
        {
            ImageUpload imageUpload = new ImageUpload();
            imageUpload.ID = id;
            imageUpload.ImageName = imageName;
            imageUpload.CreateDate = createDate;
            imageUpload.ImageFile = imageFile;
            return imageUpload;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageName
        {
            get
            {
                return _ImageName;
            }
            set
            {
                OnImageNameChanging(value);
                ReportPropertyChanging("ImageName");
                _ImageName = StructuralObject.SetValidValue(value, false, "ImageName");
                ReportPropertyChanged("ImageName");
                OnImageNameChanged();
            }
        }
        private global::System.String _ImageName;
        partial void OnImageNameChanging(global::System.String value);
        partial void OnImageNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value, "CreateDate");
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageFile
        {
            get
            {
                return _ImageFile;
            }
            set
            {
                OnImageFileChanging(value);
                ReportPropertyChanging("ImageFile");
                _ImageFile = StructuralObject.SetValidValue(value, false, "ImageFile");
                ReportPropertyChanged("ImageFile");
                OnImageFileChanged();
            }
        }
        private global::System.String _ImageFile;
        partial void OnImageFileChanging(global::System.String value);
        partial void OnImageFileChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BitCoinsModel", "FK_UserAccount_ImageUpload", "UserAccount")]
        public EntityCollection<UserAccount> UserAccounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserAccount>("BitCoinsModel.FK_UserAccount_ImageUpload", "UserAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserAccount>("BitCoinsModel.FK_UserAccount_ImageUpload", "UserAccount", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BitCoinsModel", Name="Post")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Post : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Post object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="postAuthor">Initial value of the PostAuthor property.</param>
        /// <param name="postDate">Initial value of the PostDate property.</param>
        /// <param name="postTittle">Initial value of the PostTittle property.</param>
        /// <param name="postContent">Initial value of the PostContent property.</param>
        public static Post CreatePost(global::System.Int32 id, global::System.Int32 postAuthor, global::System.DateTime postDate, global::System.String postTittle, global::System.String postContent)
        {
            Post post = new Post();
            post.ID = id;
            post.PostAuthor = postAuthor;
            post.PostDate = postDate;
            post.PostTittle = postTittle;
            post.PostContent = postContent;
            return post;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostAuthor
        {
            get
            {
                return _PostAuthor;
            }
            set
            {
                OnPostAuthorChanging(value);
                ReportPropertyChanging("PostAuthor");
                _PostAuthor = StructuralObject.SetValidValue(value, "PostAuthor");
                ReportPropertyChanged("PostAuthor");
                OnPostAuthorChanged();
            }
        }
        private global::System.Int32 _PostAuthor;
        partial void OnPostAuthorChanging(global::System.Int32 value);
        partial void OnPostAuthorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PostDate
        {
            get
            {
                return _PostDate;
            }
            set
            {
                OnPostDateChanging(value);
                ReportPropertyChanging("PostDate");
                _PostDate = StructuralObject.SetValidValue(value, "PostDate");
                ReportPropertyChanged("PostDate");
                OnPostDateChanged();
            }
        }
        private global::System.DateTime _PostDate;
        partial void OnPostDateChanging(global::System.DateTime value);
        partial void OnPostDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PostTittle
        {
            get
            {
                return _PostTittle;
            }
            set
            {
                OnPostTittleChanging(value);
                ReportPropertyChanging("PostTittle");
                _PostTittle = StructuralObject.SetValidValue(value, false, "PostTittle");
                ReportPropertyChanged("PostTittle");
                OnPostTittleChanged();
            }
        }
        private global::System.String _PostTittle;
        partial void OnPostTittleChanging(global::System.String value);
        partial void OnPostTittleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostExcerpt
        {
            get
            {
                return _PostExcerpt;
            }
            set
            {
                OnPostExcerptChanging(value);
                ReportPropertyChanging("PostExcerpt");
                _PostExcerpt = StructuralObject.SetValidValue(value, true, "PostExcerpt");
                ReportPropertyChanged("PostExcerpt");
                OnPostExcerptChanged();
            }
        }
        private global::System.String _PostExcerpt;
        partial void OnPostExcerptChanging(global::System.String value);
        partial void OnPostExcerptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PostContent
        {
            get
            {
                return _PostContent;
            }
            set
            {
                OnPostContentChanging(value);
                ReportPropertyChanging("PostContent");
                _PostContent = StructuralObject.SetValidValue(value, false, "PostContent");
                ReportPropertyChanged("PostContent");
                OnPostContentChanged();
            }
        }
        private global::System.String _PostContent;
        partial void OnPostContentChanging(global::System.String value);
        partial void OnPostContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> PostStatus
        {
            get
            {
                return _PostStatus;
            }
            set
            {
                OnPostStatusChanging(value);
                ReportPropertyChanging("PostStatus");
                _PostStatus = StructuralObject.SetValidValue(value, "PostStatus");
                ReportPropertyChanged("PostStatus");
                OnPostStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _PostStatus;
        partial void OnPostStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnPostStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FeatureImage
        {
            get
            {
                return _FeatureImage;
            }
            set
            {
                OnFeatureImageChanging(value);
                ReportPropertyChanging("FeatureImage");
                _FeatureImage = StructuralObject.SetValidValue(value, true, "FeatureImage");
                ReportPropertyChanged("FeatureImage");
                OnFeatureImageChanged();
            }
        }
        private global::System.String _FeatureImage;
        partial void OnFeatureImageChanging(global::System.String value);
        partial void OnFeatureImageChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BitCoinsModel", "FK_Post_UserAccount", "UserAccount")]
        public UserAccount UserAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("BitCoinsModel.FK_Post_UserAccount", "UserAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("BitCoinsModel.FK_Post_UserAccount", "UserAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserAccount> UserAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("BitCoinsModel.FK_Post_UserAccount", "UserAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserAccount>("BitCoinsModel.FK_Post_UserAccount", "UserAccount", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BitCoinsModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value, "principal_id");
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value, "diagram_id");
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value, "version");
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true, "definition");
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BitCoinsModel", Name="Transfer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transfer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Transfer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="orderName">Initial value of the OrderName property.</param>
        /// <param name="transferType">Initial value of the TransferType property.</param>
        /// <param name="fromUserID">Initial value of the FromUserID property.</param>
        /// <param name="toUserID">Initial value of the ToUserID property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="currencyType">Initial value of the CurrencyType property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static Transfer CreateTransfer(global::System.Int32 id, global::System.String orderName, global::System.Int32 transferType, global::System.Int32 fromUserID, global::System.Int32 toUserID, global::System.Double amount, global::System.String description, global::System.Int32 currencyType, global::System.DateTime createDate)
        {
            Transfer transfer = new Transfer();
            transfer.ID = id;
            transfer.OrderName = orderName;
            transfer.TransferType = transferType;
            transfer.FromUserID = fromUserID;
            transfer.ToUserID = toUserID;
            transfer.Amount = amount;
            transfer.Description = description;
            transfer.CurrencyType = currencyType;
            transfer.CreateDate = createDate;
            return transfer;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrderName
        {
            get
            {
                return _OrderName;
            }
            set
            {
                OnOrderNameChanging(value);
                ReportPropertyChanging("OrderName");
                _OrderName = StructuralObject.SetValidValue(value, false, "OrderName");
                ReportPropertyChanged("OrderName");
                OnOrderNameChanged();
            }
        }
        private global::System.String _OrderName;
        partial void OnOrderNameChanging(global::System.String value);
        partial void OnOrderNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransferType
        {
            get
            {
                return _TransferType;
            }
            set
            {
                OnTransferTypeChanging(value);
                ReportPropertyChanging("TransferType");
                _TransferType = StructuralObject.SetValidValue(value, "TransferType");
                ReportPropertyChanged("TransferType");
                OnTransferTypeChanged();
            }
        }
        private global::System.Int32 _TransferType;
        partial void OnTransferTypeChanging(global::System.Int32 value);
        partial void OnTransferTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FromUserID
        {
            get
            {
                return _FromUserID;
            }
            set
            {
                OnFromUserIDChanging(value);
                ReportPropertyChanging("FromUserID");
                _FromUserID = StructuralObject.SetValidValue(value, "FromUserID");
                ReportPropertyChanged("FromUserID");
                OnFromUserIDChanged();
            }
        }
        private global::System.Int32 _FromUserID;
        partial void OnFromUserIDChanging(global::System.Int32 value);
        partial void OnFromUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToUserID
        {
            get
            {
                return _ToUserID;
            }
            set
            {
                OnToUserIDChanging(value);
                ReportPropertyChanging("ToUserID");
                _ToUserID = StructuralObject.SetValidValue(value, "ToUserID");
                ReportPropertyChanged("ToUserID");
                OnToUserIDChanged();
            }
        }
        private global::System.Int32 _ToUserID;
        partial void OnToUserIDChanging(global::System.Int32 value);
        partial void OnToUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Double _Amount;
        partial void OnAmountChanging(global::System.Double value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrencyType
        {
            get
            {
                return _CurrencyType;
            }
            set
            {
                OnCurrencyTypeChanging(value);
                ReportPropertyChanging("CurrencyType");
                _CurrencyType = StructuralObject.SetValidValue(value, "CurrencyType");
                ReportPropertyChanged("CurrencyType");
                OnCurrencyTypeChanged();
            }
        }
        private global::System.Int32 _CurrencyType;
        partial void OnCurrencyTypeChanging(global::System.Int32 value);
        partial void OnCurrencyTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value, "CreateDate");
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _Status;
        partial void OnStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BitCoinsModel", "FK_Transfer_Currency", "Currency")]
        public Currency Currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("BitCoinsModel.FK_Transfer_Currency", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("BitCoinsModel.FK_Transfer_Currency", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> CurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("BitCoinsModel.FK_Transfer_Currency", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("BitCoinsModel.FK_Transfer_Currency", "Currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BitCoinsModel", "FK_Transfer_TransferType", "TransferType")]
        public TransferType TransferType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransferType>("BitCoinsModel.FK_Transfer_TransferType", "TransferType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransferType>("BitCoinsModel.FK_Transfer_TransferType", "TransferType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TransferType> TransferType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransferType>("BitCoinsModel.FK_Transfer_TransferType", "TransferType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TransferType>("BitCoinsModel.FK_Transfer_TransferType", "TransferType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BitCoinsModel", "FK_Transfer_UserAccount", "UserAccount")]
        public UserAccount UserAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("BitCoinsModel.FK_Transfer_UserAccount", "UserAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("BitCoinsModel.FK_Transfer_UserAccount", "UserAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserAccount> UserAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("BitCoinsModel.FK_Transfer_UserAccount", "UserAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserAccount>("BitCoinsModel.FK_Transfer_UserAccount", "UserAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BitCoinsModel", "FK_TransferHistory_Transfer", "TransferHistory")]
        public EntityCollection<TransferHistory> TransferHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransferHistory>("BitCoinsModel.FK_TransferHistory_Transfer", "TransferHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransferHistory>("BitCoinsModel.FK_TransferHistory_Transfer", "TransferHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BitCoinsModel", Name="TransferHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransferHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransferHistory object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="transferName">Initial value of the TransferName property.</param>
        /// <param name="transferType">Initial value of the TransferType property.</param>
        /// <param name="amout">Initial value of the Amout property.</param>
        /// <param name="transferID">Initial value of the TransferID property.</param>
        public static TransferHistory CreateTransferHistory(global::System.Int32 id, global::System.String transferName, global::System.Int32 transferType, global::System.Double amout, global::System.Int32 transferID)
        {
            TransferHistory transferHistory = new TransferHistory();
            transferHistory.ID = id;
            transferHistory.TransferName = transferName;
            transferHistory.TransferType = transferType;
            transferHistory.Amout = amout;
            transferHistory.TransferID = transferID;
            return transferHistory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransferName
        {
            get
            {
                return _TransferName;
            }
            set
            {
                OnTransferNameChanging(value);
                ReportPropertyChanging("TransferName");
                _TransferName = StructuralObject.SetValidValue(value, false, "TransferName");
                ReportPropertyChanged("TransferName");
                OnTransferNameChanged();
            }
        }
        private global::System.String _TransferName;
        partial void OnTransferNameChanging(global::System.String value);
        partial void OnTransferNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransferType
        {
            get
            {
                return _TransferType;
            }
            set
            {
                OnTransferTypeChanging(value);
                ReportPropertyChanging("TransferType");
                _TransferType = StructuralObject.SetValidValue(value, "TransferType");
                ReportPropertyChanged("TransferType");
                OnTransferTypeChanged();
            }
        }
        private global::System.Int32 _TransferType;
        partial void OnTransferTypeChanging(global::System.Int32 value);
        partial void OnTransferTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amout
        {
            get
            {
                return _Amout;
            }
            set
            {
                OnAmoutChanging(value);
                ReportPropertyChanging("Amout");
                _Amout = StructuralObject.SetValidValue(value, "Amout");
                ReportPropertyChanged("Amout");
                OnAmoutChanged();
            }
        }
        private global::System.Double _Amout;
        partial void OnAmoutChanging(global::System.Double value);
        partial void OnAmoutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatDate
        {
            get
            {
                return _CreatDate;
            }
            set
            {
                OnCreatDateChanging(value);
                ReportPropertyChanging("CreatDate");
                _CreatDate = StructuralObject.SetValidValue(value, "CreatDate");
                ReportPropertyChanged("CreatDate");
                OnCreatDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatDate;
        partial void OnCreatDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransferID
        {
            get
            {
                return _TransferID;
            }
            set
            {
                OnTransferIDChanging(value);
                ReportPropertyChanging("TransferID");
                _TransferID = StructuralObject.SetValidValue(value, "TransferID");
                ReportPropertyChanged("TransferID");
                OnTransferIDChanged();
            }
        }
        private global::System.Int32 _TransferID;
        partial void OnTransferIDChanging(global::System.Int32 value);
        partial void OnTransferIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BitCoinsModel", "FK_TransferHistory_Transfer", "Transfer")]
        public Transfer Transfer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transfer>("BitCoinsModel.FK_TransferHistory_Transfer", "Transfer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transfer>("BitCoinsModel.FK_TransferHistory_Transfer", "Transfer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transfer> TransferReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transfer>("BitCoinsModel.FK_TransferHistory_Transfer", "Transfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transfer>("BitCoinsModel.FK_TransferHistory_Transfer", "Transfer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BitCoinsModel", "FK_TransferHistory_TransferType", "TransferType")]
        public TransferType TransferType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransferType>("BitCoinsModel.FK_TransferHistory_TransferType", "TransferType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransferType>("BitCoinsModel.FK_TransferHistory_TransferType", "TransferType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TransferType> TransferType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransferType>("BitCoinsModel.FK_TransferHistory_TransferType", "TransferType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TransferType>("BitCoinsModel.FK_TransferHistory_TransferType", "TransferType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BitCoinsModel", Name="TransferType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransferType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransferType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="transferType1">Initial value of the TransferType1 property.</param>
        public static TransferType CreateTransferType(global::System.Int32 id, global::System.String transferType1)
        {
            TransferType transferType = new TransferType();
            transferType.ID = id;
            transferType.TransferType1 = transferType1;
            return transferType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransferType1
        {
            get
            {
                return _TransferType1;
            }
            set
            {
                OnTransferType1Changing(value);
                ReportPropertyChanging("TransferType1");
                _TransferType1 = StructuralObject.SetValidValue(value, false, "TransferType1");
                ReportPropertyChanged("TransferType1");
                OnTransferType1Changed();
            }
        }
        private global::System.String _TransferType1;
        partial void OnTransferType1Changing(global::System.String value);
        partial void OnTransferType1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BitCoinsModel", "FK_Transfer_TransferType", "Transfer")]
        public EntityCollection<Transfer> Transfers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transfer>("BitCoinsModel.FK_Transfer_TransferType", "Transfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transfer>("BitCoinsModel.FK_Transfer_TransferType", "Transfer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BitCoinsModel", "FK_TransferHistory_TransferType", "TransferHistory")]
        public EntityCollection<TransferHistory> TransferHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransferHistory>("BitCoinsModel.FK_TransferHistory_TransferType", "TransferHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransferHistory>("BitCoinsModel.FK_TransferHistory_TransferType", "TransferHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BitCoinsModel", Name="UserAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserAccount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserAccount object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="iDRole">Initial value of the IDRole property.</param>
        public static UserAccount CreateUserAccount(global::System.Int32 id, global::System.String userName, global::System.String password, global::System.String email, global::System.Boolean isActive, global::System.Int32 iDRole)
        {
            UserAccount userAccount = new UserAccount();
            userAccount.ID = id;
            userAccount.UserName = userName;
            userAccount.Password = password;
            userAccount.Email = email;
            userAccount.IsActive = isActive;
            userAccount.IDRole = iDRole;
            return userAccount;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Age
        {
            get
            {
                return _Age;
            }
            set
            {
                OnAgeChanging(value);
                ReportPropertyChanging("Age");
                _Age = StructuralObject.SetValidValue(value, "Age");
                ReportPropertyChanged("Age");
                OnAgeChanged();
            }
        }
        private Nullable<global::System.Int32> _Age;
        partial void OnAgeChanging(Nullable<global::System.Int32> value);
        partial void OnAgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true, "Gender");
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true, "Address");
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BitCoinsQR
        {
            get
            {
                return _BitCoinsQR;
            }
            set
            {
                OnBitCoinsQRChanging(value);
                ReportPropertyChanging("BitCoinsQR");
                _BitCoinsQR = StructuralObject.SetValidValue(value, true, "BitCoinsQR");
                ReportPropertyChanged("BitCoinsQR");
                OnBitCoinsQRChanged();
            }
        }
        private global::System.String _BitCoinsQR;
        partial void OnBitCoinsQRChanging(global::System.String value);
        partial void OnBitCoinsQRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BitCoinsCode
        {
            get
            {
                return _BitCoinsCode;
            }
            set
            {
                OnBitCoinsCodeChanging(value);
                ReportPropertyChanging("BitCoinsCode");
                _BitCoinsCode = StructuralObject.SetValidValue(value, true, "BitCoinsCode");
                ReportPropertyChanged("BitCoinsCode");
                OnBitCoinsCodeChanged();
            }
        }
        private global::System.String _BitCoinsCode;
        partial void OnBitCoinsCodeChanging(global::System.String value);
        partial void OnBitCoinsCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDRole
        {
            get
            {
                return _IDRole;
            }
            set
            {
                OnIDRoleChanging(value);
                ReportPropertyChanging("IDRole");
                _IDRole = StructuralObject.SetValidValue(value, "IDRole");
                ReportPropertyChanged("IDRole");
                OnIDRoleChanged();
            }
        }
        private global::System.Int32 _IDRole;
        partial void OnIDRoleChanging(global::System.Int32 value);
        partial void OnIDRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDParent
        {
            get
            {
                return _IDParent;
            }
            set
            {
                OnIDParentChanging(value);
                ReportPropertyChanging("IDParent");
                _IDParent = StructuralObject.SetValidValue(value, "IDParent");
                ReportPropertyChanged("IDParent");
                OnIDParentChanged();
            }
        }
        private Nullable<global::System.Int32> _IDParent;
        partial void OnIDParentChanging(Nullable<global::System.Int32> value);
        partial void OnIDParentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Double> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Double> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ImageProfile
        {
            get
            {
                return _ImageProfile;
            }
            set
            {
                OnImageProfileChanging(value);
                ReportPropertyChanging("ImageProfile");
                _ImageProfile = StructuralObject.SetValidValue(value, "ImageProfile");
                ReportPropertyChanged("ImageProfile");
                OnImageProfileChanged();
            }
        }
        private Nullable<global::System.Int32> _ImageProfile;
        partial void OnImageProfileChanging(Nullable<global::System.Int32> value);
        partial void OnImageProfileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FacebookLink
        {
            get
            {
                return _FacebookLink;
            }
            set
            {
                OnFacebookLinkChanging(value);
                ReportPropertyChanging("FacebookLink");
                _FacebookLink = StructuralObject.SetValidValue(value, true, "FacebookLink");
                ReportPropertyChanged("FacebookLink");
                OnFacebookLinkChanged();
            }
        }
        private global::System.String _FacebookLink;
        partial void OnFacebookLinkChanging(global::System.String value);
        partial void OnFacebookLinkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SkypeID
        {
            get
            {
                return _SkypeID;
            }
            set
            {
                OnSkypeIDChanging(value);
                ReportPropertyChanging("SkypeID");
                _SkypeID = StructuralObject.SetValidValue(value, true, "SkypeID");
                ReportPropertyChanged("SkypeID");
                OnSkypeIDChanged();
            }
        }
        private global::System.String _SkypeID;
        partial void OnSkypeIDChanging(global::System.String value);
        partial void OnSkypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Token
        {
            get
            {
                return _Token;
            }
            set
            {
                OnTokenChanging(value);
                ReportPropertyChanging("Token");
                _Token = StructuralObject.SetValidValue(value, true, "Token");
                ReportPropertyChanged("Token");
                OnTokenChanged();
            }
        }
        private global::System.String _Token;
        partial void OnTokenChanging(global::System.String value);
        partial void OnTokenChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BitCoinsModel", "FK_UserAccount_UserRole", "UserRole")]
        public UserRole UserRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRole>("BitCoinsModel.FK_UserAccount_UserRole", "UserRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRole>("BitCoinsModel.FK_UserAccount_UserRole", "UserRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserRole> UserRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRole>("BitCoinsModel.FK_UserAccount_UserRole", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserRole>("BitCoinsModel.FK_UserAccount_UserRole", "UserRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BitCoinsModel", "FK_UserAccount_ImageUpload", "ImageUpload")]
        public ImageUpload ImageUpload
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImageUpload>("BitCoinsModel.FK_UserAccount_ImageUpload", "ImageUpload").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImageUpload>("BitCoinsModel.FK_UserAccount_ImageUpload", "ImageUpload").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ImageUpload> ImageUploadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImageUpload>("BitCoinsModel.FK_UserAccount_ImageUpload", "ImageUpload");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ImageUpload>("BitCoinsModel.FK_UserAccount_ImageUpload", "ImageUpload", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BitCoinsModel", "FK_Post_UserAccount", "Post")]
        public EntityCollection<Post> Posts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Post>("BitCoinsModel.FK_Post_UserAccount", "Post");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Post>("BitCoinsModel.FK_Post_UserAccount", "Post", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BitCoinsModel", "FK_Transfer_UserAccount", "Transfer")]
        public EntityCollection<Transfer> Transfers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transfer>("BitCoinsModel.FK_Transfer_UserAccount", "Transfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transfer>("BitCoinsModel.FK_Transfer_UserAccount", "Transfer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BitCoinsModel", Name="UserRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserRole object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="levelUser">Initial value of the LevelUser property.</param>
        public static UserRole CreateUserRole(global::System.Int32 id, global::System.Int32 levelUser)
        {
            UserRole userRole = new UserRole();
            userRole.ID = id;
            userRole.LevelUser = levelUser;
            return userRole;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LevelUser
        {
            get
            {
                return _LevelUser;
            }
            set
            {
                OnLevelUserChanging(value);
                ReportPropertyChanging("LevelUser");
                _LevelUser = StructuralObject.SetValidValue(value, "LevelUser");
                ReportPropertyChanged("LevelUser");
                OnLevelUserChanged();
            }
        }
        private global::System.Int32 _LevelUser;
        partial void OnLevelUserChanging(global::System.Int32 value);
        partial void OnLevelUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BitCoinsModel", "FK_UserAccount_UserRole", "UserAccount")]
        public EntityCollection<UserAccount> UserAccounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserAccount>("BitCoinsModel.FK_UserAccount_UserRole", "UserAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserAccount>("BitCoinsModel.FK_UserAccount_UserRole", "UserAccount", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
